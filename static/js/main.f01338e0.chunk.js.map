{"version":3,"sources":["components/Wrapper/index.js","components/Header.js","utils/API.js","components/SearchForm.js","components/TableDataBody.js","components/TableData.js","components/MainContainer.js","App.js","index.js"],"names":["Wrapper","props","className","children","Header","style","color","backgroundColor","width","textAlign","padding","API","getRandomUser","axios","get","SearchForm","onChange","handleInputChange","value","type","placeholder","id","TableDataBody","employeeRow","employees","map","employee","index","src","picture","thumbnail","alt","name","first","last","email","phone","TableData","Table","striped","bordered","hover","size","onClick","onSort","cursor","MainContainer","state","filteredEmployees","search","sortOrder","getEmployees","then","res","setState","data","results","catch","err","console","log","handleSort","colName","sort","a","b","nameA","toUpperCase","nameB","event","filter","target","filteredList","item","toLowerCase","indexOf","this","Container","Row","Col","Card","heading","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f01338e0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div\r\n      className=\"header\"\r\n      style={{\r\n        color: \"wheat\",\r\n        backgroundColor: \"#684551\",\r\n        width: \"100%\",\r\n        textAlign: \"center\",\r\n        padding: \"20px\",\r\n      }}\r\n    >\r\n      <h1>Employee Directory</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\n\r\nconst API = {\r\n  getRandomUser: function () {\r\n    return axios.get(\"https://randomuser.me/api/?results=100&nat=us\");\r\n  },\r\n};\r\n\r\nexport default API;\r\n","import React from \"react\";\r\n\r\nfunction SearchForm(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <form className=\"form-inline\">\r\n        <input\r\n          onChange={props.handleInputChange}\r\n          value={props.value}\r\n          type=\"search\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search Employee\"\r\n          id=\"search\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\n\r\n//Call the API and display data (picture, name, email and ph rows.\r\nfunction TableDataBody(props) {\r\n  // console.log(\"Employees: \", props.employees);\r\n  let employeeRow = props.employees.map((employee, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td>{index + 1}</td>\r\n        <td>\r\n          <img\r\n            src={employee.picture.thumbnail}\r\n            alt={\"employee\" + index + \" photo\"}\r\n          />\r\n        </td>\r\n        <td>{employee.name.first + \" \" + employee.name.last} </td>\r\n        <td>{employee.email} </td>\r\n        <td>{employee.phone} </td>\r\n      </tr>\r\n    );\r\n  });\r\n  return <tbody>{employeeRow}</tbody>;\r\n}\r\n\r\nexport default TableDataBody;\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport TableDataBody from \"./TableDataBody\";\r\n\r\nfunction TableData(props) {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <Table striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Picture</th>\r\n            <th\r\n              onClick={() => props.onSort(\"name\")}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              Name\r\n            </th>\r\n            <th\r\n              onClick={() => props.onSort(\"email\")}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              Email\r\n            </th>\r\n            <th>Phone Number</th>\r\n          </tr>\r\n        </thead>\r\n        <TableDataBody employees={props.employees} />\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableData;\r\n","//copied from activity 20\r\nimport React, { Component } from \"react\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\nimport API from \"../utils/API\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport TableData from \"./TableData\";\r\n\r\nclass MainContainer extends Component {\r\n  state = {\r\n    employees: [],\r\n    filteredEmployees: [],\r\n    search: \"\",\r\n    sortOrder: \"asc\",\r\n  };\r\n\r\n  //Getting data from API\r\n  getEmployees = () => {\r\n    API.getRandomUser()\r\n      .then((res) => {\r\n        this.setState({ employees: res.data.results });\r\n        // A copy of the same data for manipulation\r\n        this.setState({ filteredEmployees: res.data.results });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  componentDidMount() {\r\n    this.getEmployees();\r\n  }\r\n\r\n  //Sorting by name in ascending and descending\r\n  handleSort = (colName) => {\r\n    let sort;\r\n    // console.log(this.state.sortOrder);\r\n\r\n    if (colName === \"name\") {\r\n      if (this.state.sortOrder === \"asc\") {\r\n        sort = this.state.filteredEmployees.sort((a, b) => {\r\n          //   let nameA = a.name.first.toUpperCase();\r\n\r\n          let nameA = a[\"name\"].first.toUpperCase();\r\n          //   let nameB = b.name.first.toUpperCase();\r\n          let nameB = b[\"name\"].first.toUpperCase();\r\n\r\n          if (nameA < nameB) {\r\n            return -1;\r\n          } else if (nameA > nameB) {\r\n            return 1;\r\n          } else {\r\n            return 0;\r\n          }\r\n        });\r\n        this.setState({ sortOrder: \"desc\" });\r\n      } else {\r\n        sort = this.state.filteredEmployees.sort((a, b) => {\r\n          //   let nameA = a.name.first.toUpperCase();\r\n\r\n          let nameA = a[\"name\"].first.toUpperCase();\r\n          //   let nameB = b.name.first.toUpperCase();\r\n          let nameB = b[\"name\"].first.toUpperCase();\r\n\r\n          if (nameA > nameB) {\r\n            return -1;\r\n          } else if (nameA < nameB) {\r\n            return 1;\r\n          } else {\r\n            return 0;\r\n          }\r\n        });\r\n        this.setState({ sortOrder: \"asc\" });\r\n      }\r\n    } else {\r\n      //Sorting by email in ascending and descending\r\n      if (this.state.sortOrder === \"asc\") {\r\n        sort = this.state.filteredEmployees.sort((a, b) => {\r\n          let nameA = a.email;\r\n          let nameB = b.email;\r\n\r\n          if (nameA < nameB) {\r\n            return -1;\r\n          } else if (nameA > nameB) {\r\n            return 1;\r\n          } else {\r\n            return 0;\r\n          }\r\n        });\r\n        this.setState({ sortOrder: \"desc\" });\r\n      } else {\r\n        sort = this.state.filteredEmployees.sort((a, b) => {\r\n          let nameA = a.email;\r\n          let nameB = b.email;\r\n\r\n          if (nameA > nameB) {\r\n            return -1;\r\n          } else if (nameA < nameB) {\r\n            return 1;\r\n          } else {\r\n            return 0;\r\n          }\r\n        });\r\n        this.setState({ sortOrder: \"asc\" });\r\n      }\r\n    }\r\n\r\n    this.setState({ filteredEmployees: sort });\r\n  };\r\n\r\n  //Filter data on value change\r\n  handleInputChange = (event) => {\r\n    const filter = event.target.value;\r\n    //Store value in search state\r\n    this.setState({ search: filter });\r\n    if (!filter) {\r\n      //Calling original data when nothing in the value\r\n      this.setState({ filteredEmployees: this.state.employees });\r\n    } else {\r\n      //Show data using filter method\r\n      const filteredList = this.state.filteredEmployees.filter((item) => {\r\n        let values = item.name.first.toLowerCase();\r\n        return values.indexOf(filter.toLowerCase()) !== -1;\r\n      });\r\n\r\n      this.setState({ filteredEmployees: filteredList });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col size=\"md-8\">\r\n            <SearchForm\r\n              value={this.state.search}\r\n              handleInputChange={this.handleInputChange}\r\n            />\r\n            <Card heading=\"Search\">\r\n              <TableData\r\n                employees={this.state.filteredEmployees}\r\n                onSort={this.handleSort}\r\n              />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainContainer;\r\n","import React from \"react\";\nimport Wrapper from \"./components/Wrapper\";\n\nimport Header from \"./components/Header\";\nimport MainContainer from \"./components/MainContainer\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Wrapper>\n        <MainContainer />\n      </Wrapper>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}